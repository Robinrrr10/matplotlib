Matplotlib notes:
----------------

Here I have used below tutorial for learning matplotlib

Link:
https://www.youtube.com/watch?v=qqwf4Vuj8oM&list=PLeo1K3hjS3uu4Lr8_kro2AqaO6CFYgKOl&index=2




Matplotlib Tutorial 1 - Introduction and Installation:
------------------------------------------------------
What is matplotlib:
This the data virtualization tool.
This will show the data in the format of any 2D format like graph, chart and many more format.
This is one of the python library

Use below command to install matplot

pip install matplotlib

//This can also comes along with anaconda. 
If we are already using alaconda, use below command to list the installed library and check whether matplotlib was already installed or not


We can use it in any this in any of the python project.
We can see the results in jupyter noteboook or IDE like pycharm, vscode etc
If we are using jupyter notebook use below line to show the virtualization 
%matplotlib inline


Why we need this.
It is always good to see the data in the image.
Human can easily understand and faster when seeing the image than the text


Below is the portal for matplotlib:
https://matplotlib.org/
We can refer this for more details



pyplot is one of the widely used data virtualization in matplotlib
https://matplotlib.org/stable/tutorials/pyplot.html
https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html
This link will give more details about pyplot and how we can use this


Below is one of simple example

import matplotlib.pyplot as plt
%matplotlib inline               # this is required only on jupyter
x = [1, 2, 3, 4, 5, 6, 7]
y = [41, 40, 42, 38, 41, 39, 41]
plt.plot(x,y)    # This is show the line graph of x and y 


Below is along with color and line width
plt.plot(x,y,color='red', linewidth=4 )   # this is the same with color and line width

Below is along with color, linewidth, marker, linestyle
plt.plot(x,y,color='red', linewidth=1, marker='o', linestyle='dotted')

To add title, we can use
plt.title = 'giveTitleHere'

To add x label 
plt.xlabel = 'giveXLabelHere'

To add y label
plt.ylabel = 'giveYLabelHere'

Below is the example along with title and labels
plt.xlabel = 'Day'
plt.ylabel = 'Temperature'
plt.title = "Weather of the day"
plt.plot(x,y,color='green', linewidth=2, marker='+', linestyle='dashed')

Below link has more details about pyplot and how to use etc
https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html



----




Matplotlib Tutorial 2 - format strings in plot function
------------------------------------------------------
Here we can see format function and some attributes
Format string is the short way to give the attributes to plotting

We can use different format string to give the color, marker, linestyle and other.
Eg:
g+ means green with + marker
r*-- means red with start marker with dotted lines

We can give like below
plt.plot(x,y,'g+')

plt.plot(x,y, 'r*--')

We can give in below. But order does not matter. It will string work
'[marker][line][color]'

'+--r'    # + marker   -- line   red color

There are format string. Please refer on below link for more details
https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html



We can also given the attribute name and value instead of format string
color    # color we can give in string or we can give in hexa value
marker
linestyle
markersize

Eg:
plt.plot(x,y, color='red', marker='*', linestyle='dotted', markersize=2)


plt.plot(x,y, color='#562384', marker='*', linestyle='dotted', markersize=5)

For more details refer below
https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html

alpha:
alpha is to control the transparancy
alpha=1 is the no transparancy 
alpha=0.5 is half transperance
alpha=0 mens is complete transparancy

Eg:
plt.plot(x, y, color='blue', alpha=0.2)

Refer all details in below
https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html

---------------------------

Matplotlib Tutorial 3 - Axes labels, Legend, Grid
---------------------------------------------------
Here we can see how we can give title, name for x axis, y axis.
Here we can also see how we can have mulitple lines in same graph
Here we can also see how we can give names for each lines
Here we can also see how we can give the grid graph lines


plt.title('giveTitleOfGraph')
plt.xabel('GiveXLabelHere')
plt.ylabel('GiveYLabelHere')

# When we are giving multiple plot lines as like below 3 lines, this will show all line graphs in same graph
plt.plot(x, y_avg, label='Avg')
plt.plot(x, y_min, label='Min')
plt.plot(y, y_max, label='Max')
plt.legend()      #This is to show the each line label

plt.legend(loc='upper right')   # To show in given location

plt.legend(loc='best')          # This will show at the best fit location. Mostly where we have more spaces

plt.legend(loc='best', shadow=True)    # To show the shadow of the box

plt.legend(loc='best', shadow=True, fontsize='small')     # fontsize is to show the line label in given font size

plt.grid()               # To show the grid graph lines

-----------------------------

Matplotlib Tutorial 4 - Bar Chart
---------------------------------
Here we can see how we can generate bar chart

plt.bar(x,y) - This is the simple way to generate bar chart

if one of the value has string, get number of each
and then do ploting

company = ['Google', 'Facebook', 'Amazon', 'Ebay']
revenue = [89, 76, 102, 45]
xpos = np.arrange(len(company))   //Getting numbers for each Eg: 0, 1, 2, 3

plt.xticks(xpos, company)   //Mapping number with company again. So this will show the company name in graph
plt.bar(xpos, revenue)

To add more bar in same graph
profit=[40, 30, 84, 30]
plt.xticks(xpos, company)   //Mapping number with company again
plt.bar(xpos, revenue)
plt.bar(xpos, profit)
//Above two will be in same bar



//Below line is to have separate bar chart for both. we adjusted by minus 0.2 and plus 0.2 and along width 0.5
plt.bar(xpos-0.2, revenue, width=0.5, label='Revenue')  
plt.bar(xpos+0.2, profit, width=0.5, label='Profit')
plt.legend()

We have moved the position of with minus in one bar and plus in other bar
With the width of 0.5



For horizontal bar chart, we need to use barh
plt,barh(x, y)

Below is the complete bar chat in horizontal for the same

profit = [70, 62, 48, 72]
ypos = np.arange(len(company))
plt.yticks(ypos, company)
plt.xlabel('Revenue/Profit Billion')
plt.ylabel('Company')
plt.barh(ypos-0.2, revenue, height=0.5, label='Revenue')      # instead of width, we have given height
plt.barh(ypos+0.2, profit, height=0.5, label='Profit')
plt.legend()



-------------------------------------------

Matplotlib Tutorial 5 - Histograms
-----------------------------------
Here we can see how we can generate histogram chart
This is simular to bar chart, But here we will pass only one set of values.
For that one array, it will show frequency, how much falls on each range of values etc.

sugarValues = [94, 121, 97, 104, 118, 92, 87, 120, 94, 145, 85, 131, 109]
plt.hist(sugarValues)   # By default it will plot on 10 different bars. We will call it as the bin

We can specify number of bins
plt.hist(sugarValues, bin=3)   # here it will create only 3 bar

We can specify range, by giving
plt.hist(sugarValues, bin=[80, 100, 120, 150])    This will create 3 bars. 80 to 100 in one bar, 100 to 120 another bar, 120 to 150 another bar

plt.hist(sugarValues, bin=3, rwidth=0.95)      # rwidth is to give space between bars.

plt.hist(sugarValues, bin=[80, 100, 120, 150], rwidth=0.95, color='green')    # we can give color

plt.hist(sugarValues, bin=[80, 100, 120, 150], rwidth=0.95, color='g', histtype='step')    # we can give color g for green and type as step to show steps like one

We can have multiple sets in same historgram
sugar_values_men = [94, 121, 97, 104, 118, 92, 87, 120, 94, 145, 85, 131, 109]
sugar_values_women = [112, 89, 97, 104, 128, 132, 84, 90, 144, 95, 119]


plt.xlabel('sugar level')
plt.ylabel('Number of patients')
plt.title('Sugar patients')
plt.hist([sugar_values_men, sugar_values_women], bin=[80, 100, 120, 150], rwidth=0.95, color=['green', 'blue'], label=['men', 'women'])    # we can pass in the list
plt.legend()


If we wanted to show the same in horizontal, give orientation
plt.hist([sugar_values_men, sugar_values_women], bin=[80, 100, 120, 150], rwidth=0.95, color=['green', 'blue'], label=['men', 'women'], orientati='horizontal')
This will show in horizontal














---------------------------


Notes:
----



------------
